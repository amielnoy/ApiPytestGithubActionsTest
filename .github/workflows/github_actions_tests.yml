name: Run Tests

on:
  push:
    branches:
      - main
      - main-test
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      FLASK_APP: app.py  # Updated to reflect the new location
      FLASK_PORT: 5000

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt
    - name: Install Allure
      run: npm install -g allure-commandline # or pip install allure-pytest if using python

    - name: Start Flask server
      run: |
        source .venv/bin/activate
        nohup flask run --host=0.0.0.0 -p $FLASK_PORT &
        sleep 15  # Wait for the server to start

    - name: Run tests
      run: |
        source .venv/bin/activate
        pytest tests

    - name: Debug Allure Results Directory
      run: |
        echo "Checking if allure-results directory exists..."
        if [ -d "allure-results" ]; then
          echo "allure-results directory exists."
          echo "Listing contents of allure-results:"
          ls -la allure-results
        else
          echo "allure-results directory does not exist."
        fi    

    - name: Cache dependencies if tests pass
      if: success()
      uses: actions/cache/save@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Auto-assign reviewers
      uses: kentaro-m/auto-assign-action@v2.0.0
      if: github.event_name == 'pull_request'

    - name: Store Playwright Traces and Videos From Failed Tests
      if: failure()
      uses: actions/upload-artifact@v4.6.1
      id: artifact-upload-step
      with:
        name: test-results
        path: test-results/
        retention-days: 7

    - name: Link Playwright Traces And Videos To Allure Report
      working-directory: allure-results
      if: failure()
      run: echo ARTIFACT_URL=${{ steps.artifact-upload-step.outputs.artifact-url }} >> environment.properties

    - name: Link Git Information And Browser Version To Allure Report
      working-directory: allure-results
      if: always()
      run: |
        {
         echo BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
         echo GIT_BRANCH=${{ github.head_ref || github.ref_name }}
         echo GIT_COMMIT_ID=${{ github.sha }}
         echo GIT_COMMIT_MESSAGE=$(git show -s --format=%s HEAD)
         echo GIT_COMMIT_AUTHOR_NAME=$(git show -s --format='%ae' HEAD)
         echo GIT_COMMIT_TIME=$(git show -s --format=%ci HEAD)
         echo CHROME_VERSION=$(google-chrome --product-version)
        } >> environment.properties

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      id: allure-report
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
    - name: Deploy Report To Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-history
