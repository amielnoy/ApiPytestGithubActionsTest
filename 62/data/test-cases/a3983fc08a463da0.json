{"uid":"a3983fc08a463da0","name":"test_delete_borrowed_book","fullName":"tests.test_for_integration.TestsBookAPI#test_delete_borrowed_book","historyId":"f79a5b41b6ef150f72b84769c968576e","time":{"start":1741783327186,"stop":1741783327190,"duration":4},"status":"failed","statusMessage":"AssertionError: Should not be able to delete a borrowed book.\nassert 200 == 409\n +  where 200 = <Response [200]>.status_code\n +  and   409 = ApiHttpConstants.CONFLICT","statusTrace":"self = <tests.test_for_integration.TestsBookAPI object at 0x7f2eb30249d0>\n\n    @allure.step(\"Delete borrowed book\")\n    # Bug deleting borRowed book can't be done!\n    def test_delete_borrowed_book(self):\n        borrow_data = {\"user_id\": 1, \"book_id\": 1}\n        borrowed_suffix = f\"/users/{borrow_data['user_id']}/borrow/{borrow_data['book_id']}\"\n        response = self.post(borrowed_suffix, json=borrow_data)\n        assert response.status_code == ApiHttpConstants.OK\n        response = self.delete(f\"/books/{borrow_data['book_id']}\")\n>       assert response.status_code == ApiHttpConstants.CONFLICT,ErrorsMessages.ERROR_CANT_BORROW\nE       AssertionError: Should not be able to delete a borrowed book.\nE       assert 200 == 409\nE        +  where 200 = <Response [200]>.status_code\nE        +  and   409 = ApiHttpConstants.CONFLICT\n\ntests/test_for_integration.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_and_teardown","time":{"start":1741783327178,"stop":1741783327186,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1741783327186,"stop":1741783327186,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Should not be able to delete a borrowed book.\nassert 200 == 409\n +  where 200 = <Response [200]>.status_code\n +  and   409 = ApiHttpConstants.CONFLICT","statusTrace":"self = <tests.test_for_integration.TestsBookAPI object at 0x7f2eb30249d0>\n\n    @allure.step(\"Delete borrowed book\")\n    # Bug deleting borRowed book can't be done!\n    def test_delete_borrowed_book(self):\n        borrow_data = {\"user_id\": 1, \"book_id\": 1}\n        borrowed_suffix = f\"/users/{borrow_data['user_id']}/borrow/{borrow_data['book_id']}\"\n        response = self.post(borrowed_suffix, json=borrow_data)\n        assert response.status_code == ApiHttpConstants.OK\n        response = self.delete(f\"/books/{borrow_data['book_id']}\")\n>       assert response.status_code == ApiHttpConstants.CONFLICT,ErrorsMessages.ERROR_CANT_BORROW\nE       AssertionError: Should not be able to delete a borrowed book.\nE       assert 200 == 409\nE        +  where 200 = <Response [200]>.status_code\nE        +  and   409 = ApiHttpConstants.CONFLICT\n\ntests/test_for_integration.py:53: AssertionError","steps":[{"name":"Delete borrowed book","time":{"start":1741783327186,"stop":1741783327189,"duration":3},"status":"failed","statusMessage":"AssertionError: Should not be able to delete a borrowed book.\nassert 200 == 409\n +  where 200 = <Response [200]>.status_code\n +  and   409 = ApiHttpConstants.CONFLICT\n","statusTrace":"  File \"/home/runner/work/RafaelApiPytestGithubActionsTest/RafaelApiPytestGithubActionsTest/.venv/lib/python3.13/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/RafaelApiPytestGithubActionsTest/RafaelApiPytestGithubActionsTest/tests/test_for_integration.py\", line 53, in test_delete_borrowed_book\n    assert response.status_code == ApiHttpConstants.CONFLICT,ErrorsMessages.ERROR_CANT_BORROW\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_for_integration"},{"name":"subSuite","value":"TestsBookAPI"},{"name":"host","value":"fv-az1441-793"},{"name":"thread","value":"2251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_for_integration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a3983fc08a463da0.json","parameterValues":[]}